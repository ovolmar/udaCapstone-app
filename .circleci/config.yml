version: 2.1
commands:
  destroy-eks-env:
    description: Destroy EKS CF Stack
    parameters:
      workflowid:
        type: string
        default: ${ CIRCLE_WORKFLOW_ID:0:7 }
    steps:
      - run:
          name: delete eks cluster
          when: on_fail
          command: |
            curl --silent --location https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_Linux_amd64.tar.gz | tar -xz -C /tmp
            sudo mv /tmp/eksctl /usr/local/bin
            eksctl delete cluster -f infrastructure/k8s-cluster.yml
      
# Adding a build command here with a revert-migrations

#--------------------------------------------------------------------------------------------------------------------------          
jobs:
  buildcontainer:
    docker:
      # Use the same Docker base as the project
      - image: cimg/go:1.17
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
    working_directory: ~/repo
    steps:
      - checkout
      # # Download and cache dependencies
      # - restore_cache:
      #     keys:
      #       - v1-dependencies-{{ checksum "requirements.txt" }}
      #       # fallback to using the latest cache if no exact match is found
      #       - v1-dependencies-
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run:
          name: "install dependencies & linting"
          command: |
            touch ".env"
            echo DOCKER_LOGIN=${DOCKER_LOGIN} >> ".env"
            echo DOCKER_PASSWORD=${DOCKER_PASSWORD}  >> ".env"
            echo IMAGE_NAME=${IMAGE_NAME} >> ".env"
            source ".env"
            docker build -t ${IMAGE_NAME} .
            docker tag $IMAGE_NAME ovolmar/${IMAGE_NAME}
            docker login -u ${DOCKER_LOGIN} -p ${DOCKER_PASSWORD}
            docker push ovolmar/${IMAGE_NAME}
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # linting
      - run:
          name: run lint
          command: |
            . venv/bin/activate 
            make lint 
  deploycluster:
    docker:
      - image: cimg/aws:2022.06
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install authenticator
          command: |
            cd /tmp/
            wget https://github.com/kubernetes-sigs/aws-iam-authenticator/releases/download/v0.5.9/aws-iam-authenticator_0.5.9_linux_amd64 -o aws-iam-authenticator
            sudo chmod +x /tmp/aws-iam-authenticator
            sudo mv /tmp/aws-iam-authenticator /usr/local/bin
      - run:
          name: Installing dependencies
          command: |
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
            curl --silent --location https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_Linux_amd64.tar.gz | tar -xz -C /tmp
            sudo mv /tmp/eksctl /usr/local/bin
            eksctl create cluster -f infrastructure/k8s-cluster.yml
      - run: 
          name: Authentication Handshake
          command: |
            aws eks --region ${AWS_DEFAULT_REGION} update-kubeconfig --name udacapstone-k8s-cluster
      - run: 
          name: Exposing application 
          command: |
            kubectl apply -f infrastructure/weather-pod.yml
            kubectl expose deployment capstone-load-balancer --type=LoadBalancer --name=capstone-weather
            

workflows: 
  default:
    jobs:
      - buildcontainer
      #- deploycluster